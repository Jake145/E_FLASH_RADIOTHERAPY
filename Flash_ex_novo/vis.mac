# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100

# Axes, scale, etc.
#/vis/scene/add/scale   # Simple scale line
#/vis/scene/add/axes    # Simple axes: x=red, y=green, z=blue.
/vis/scene/add/trajectories
/vis/scene/endOfEventAction accumulate 50000

#
/vis/viewer/set/style wireframe
/vis/viewer/set/hiddenMarker true
/vis/viewer/set/viewpointThetaPhi 90
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
/vis/scene/add/trajectories

/control/execute spectrum80MeV_1punta.mac

# Flux Scorer
/score/create/boxMesh boxMesh_2 
/score/mesh/boxSize 0.1  0.001 0.5 cm 
/score/mesh/nBin 1 1 1
/score/mesh/translate/xyz 3.68 0. -0.1 cm
/score/mesh/rotate/rotateZ     90.   deg
/score/quantity/flatSurfaceCurrent flux 0 F
/score/filter/particle   eMinusFilter    e-
/score/close
/score/list  

# Scoring mesh is used to calculate
#  the dose in the phantom
/score/create/boxMesh boxMesh_1
#
/score/mesh/boxSize 30. 1 1 cm
/score/mesh/nBin 120 40 40
/score/mesh/translate/xyz 30. 0 0 cm 
/score/quantity/doseDeposit dose Gy

#
/score/close

#/score/dumpQuantityToFile boxMesh_1 dose dose.out

#/score/drawProjection boxMesh_1 dose
#/score/drawProjection boxMesh_2 flux
